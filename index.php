<?php

// Дополнительная функция для удобного вывода элементов массива (написал чисто для себя для удобства работы)
function arr($arr) {
    echo '<pre>';
    print_r($arr);
    echo '</pre>';
}

/* Домашнее задание по курсу "Основы PHP" №3. Руслан Пека */

// *** Задание №1 ***
// Дан массив: $arr = [1, 2, 3, 7, 31, 4, 1, 8, 6];

// 1.1. Подсчёт длины массива:
$arr = [1, 2, 3, 7, 31, 4, 1, 8, 6];
$result = count($arr);
echo '1.1. В массиве содержиться ' . $result  . ' элементов<br><br>';   // Результат: 9

// 1.2. Перемещение первыех 4 элементаов массива в конец массива:
$arr = [1, 2, 3, 7, 31, 4, 1, 8, 6];
$arr_new = array_slice($arr, 0, 4);
for($i = 0; $i < count($arr_new); $i++) {
    $arr[] = $arr_new[$i];
}
array_splice($arr, 0, 4);
echo '1.2. Содержание массива после перемещения в конец первых 4-х элементов:';
arr($arr);      // Результат: массив $arr содержит элементы [31, 4, 1, 8, 6, 1, 2, 3, 7]

// 1.3. Получение суммы 4, 5 и 6 элементов массива:
// Использую изменённый массив из задания 1.2., где $arr = [31, 4, 1, 8, 6, 1, 2, 3, 7];

// Вариант 1. Т.к. мы знаем точные индексы и нумерация начинается с нуля - можно было бы просто суммировать $result = $arr[3] + $arr[4] + $arr[5];   // Результат: 8 + 6 + 1 = 15
// Но в добавок приведу варианты с автоматизацией этого процесса

// Вариант 2.
// С учётом того, что в данном примере ключи идут от 0 до 8
$result = 0;
foreach($arr as $k => $v) {
    if(($k == 3) or ($k == 4) or ($k == 5)) $result += $v;
}
echo '1.3. Получение суммы 4, 5 и 6 элементов массива:<br>';
echo 'Вариант 2: ' . $result . '<br>';   // Результат: 15

// Вариант 3.
// Предположим, что мы не знаем о том, идут ли ключи по порядку или заданы произвольным образом, можно поступить так:
$counter = 0;
$result = 0;
foreach($arr as $v) {
    if(($counter == 3) or ($counter == 4) or ($counter == 5)) $result += $v;
    $counter++;
}
echo 'Вариант 3: ' . $result . '<br>';   // Результат: 15

// *** Задание №2 ***
$firstArr = [
    'one' => 1,
    'two' => 2,
    'three' => 3,
    'foure' => 5,
    'five' => 12,
];
$secondArr = [
    'one' => 1,
    'seven' => 22,
    'three' => 32,
    'foure' => 5,
    'five' => 13,
    'six' => 37,
];

// 2.1. Найти все элементы которые отсутствуют в первом массиве и присутствуют во втором:
echo '<br>2.1. Элементы, которые отсутствуют в первом массиве и присутствуют во втором:<br>';
$result = array_diff_key($secondArr, $firstArr);
arr($result);   // Содержит элементы: [seven] => 22 и [six] => 37

// 2.2. Найти все элементы которые присутствую в первом и отсутствуют во втором:
echo '<br>2.2. Элементы, которые присутствую в первом и отсутствуют во втором:<br>';
$result = array_diff_key($firstArr, $secondArr);
arr($result);   // Содержит элементы: [two] => 2

// 2.3. Найти все элементы значения которых совпадают:
echo '<br>2.3. Все элементы значения которых совпадают:<br>';
$result = array_intersect_assoc($firstArr, $secondArr);
arr($result);   // Содержит элементы: [one] => 1 и [foure] => 5

// 2.4. Найти все элементы значения которых отличаются:
echo '<br>2.4. Все элементы значения которых отличаются:<br>';
$result = array_diff_assoc($firstArr, $secondArr);
$result += array_diff_assoc($secondArr, $firstArr);
arr($result);   // Содержит элементы: [two] => 2, [three] => 3, [five] => 12, [seven] => 22, [six] => 37, т.е. все элементы, которые не входят в совпадение (задание 2.3.)

// *** Задание 3 ***
$firstArr = [
    'one' => 1,
    'two' => [
        'one' => 1,
        'seven' => 22,
        'three' => 32,
    ],
    'three' => [
        'one' => 1,
        'two' => 2,
    ],
    'foure' => 5,
    'five' => [
        'three' => 32,
        'foure' => 5,
        'five' => 12,
    ],  
];

// 3.1. Получить все вторые элементы вложенных массивов:
$counter = 0;
$result = [];
foreach($firstArr as $v) {
    if(is_array($v) == true) {
        foreach($v as $key => $val) {
            if($counter == 1) $result += [$key => $val];
            $counter++;
        }
        $counter = 0;
    }
}
echo '<br>3.1. Все вторые элементы вложенных массивов:<br>';
arr($result);

// 3.2. Получить общее количество элементов в массиве:
// ПРИМЕЧАНИЕ. Не знал, стоит ли учитывать вложенные массивы, как отдельные элементы (т.е. в основном массиве считать 5 элементов + внутренние вложенных массивов или как 2 независимых элемента + внутренние вложенных массивов)
// Поэтому сделал и так и так

// Вариант 1. Считаем абсолютно все элементы, как основного, так и вложенных массивов
$counter = count($firstArr);
foreach($firstArr as $v) {
    if(is_array($v) == true) $counter += count($v);
}
echo '<br>3.2. Общее количество элементов в массиве:<br>';
echo 'Вариант 1: ' . $counter . '<br>';  // 13 элементов

// Вариант 2. Не включаем в общее число сами массивы, как элементы основного, т.е. получим на 3 элемента меньше
$counter = 0;
foreach($firstArr as $v) {
    if(is_array($v) == true) $counter += count($v);
    else $counter++;
}
echo 'Вариант 2: ' . $counter . '<br>';  // 10 элементов

// 3.3. Получить сумму всех значений в массиве:
$result = 0;
foreach($firstArr as $v) {
    if(!is_array($v)) {
        $result += $v;
    } else {
        foreach($v as $val) {
            $result += $val;
        }
    }
}
echo '<br>3.3. Сумма всех значений массива: ' . $result;    // Результат: 113

?>